/*
 * Have to use the client jar that is generated by wsconsume in jboss/bin
 * cxf/wsdl2java will not work with BPM 6
 */
package com.miraca.eboss.workitemhandler;


import java.util.HashMap;
import java.util.Map;

import org.kie.api.runtime.process.WorkItem;
import org.kie.api.runtime.process.WorkItemHandler;
import org.kie.api.runtime.process.WorkItemManager;

import com.cdyne.ws.weatherws.Weather;
import com.cdyne.ws.weatherws.WeatherReturn;
import com.cdyne.ws.weatherws.WeatherSoap;
import com.miraca.eboss.demo.CaseMaster;
import com.miraca.eboss.demo.WeatherInfo;

public class WeatherWorkItemHandler implements WorkItemHandler {

	//private static final QName SERVICE_NAME = new QName("http://ws.cdyne.com/WeatherWS/", "Weather");
	
	public void executeWorkItem(WorkItem workItem, WorkItemManager manager) {

    // extract parameters

    CaseMaster caseData = (CaseMaster) workItem.getParameter("caseInput");

    System.out.println ("input param zipcode: " + caseData.getCaseSource().getZipcode());
    WeatherReturn weatherReturn = getWeatherService (caseData.getCaseSource().getZipcode());
    
    String city=weatherReturn.getCity();

    String state=weatherReturn.getState();

    String temperature=weatherReturn.getTemperature();

    // notify manager that work item has been completed
    System.out.println ("Output parameter state is : " + state);
    System.out.println ("Output parameter temperature is: " + temperature);

    WeatherInfo weatherInfo = new WeatherInfo();
    caseData.setWeatherInfo(weatherInfo);
    caseData.getWeatherInfo().setCity(city);
    caseData.getWeatherInfo().setState(state);
    caseData.getWeatherInfo().setTemperature(temperature);
    
    final Map<String, Object> resultMap = new HashMap<String, Object>();
    resultMap.put("result", caseData);
  
    manager.completeWorkItem(workItem.getId(), resultMap);

  }

  public WeatherReturn getWeatherService (String zip) {
	 // URL wsdlURL = null;
	  
/*	  try {
	    wsdlURL = new URL("http://wsf.cdyne.com/WeatherWS/Weather.asmx?WSDL");
	  }
	  catch (Exception e) {
		  System.out.println ("Exception in URL");
		  e.printStackTrace();
	  }*/
	 
        Weather service = new Weather();
	    WeatherSoap weatherHttp = service.getWeatherSoap();//service.getPort(WeatherHttpGet.class);

	   /* System.setProperty("javax.xml.bind.JAXBContext", 
                "com.sun.xml.internal.bind.v2.ContextFactory"); */
	 // Use the BindingProvider's context to set the endpoint
/*	    BindingProvider bp = (BindingProvider) weatherHttp;
	    bp.getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, "http://wsf.cdyne.com/WeatherWS/Weather.asmx");
	    */
	    WeatherReturn weatherReturn = weatherHttp.getCityWeatherByZIP(zip);

	    return weatherReturn;
  }
  public void abortWorkItem(WorkItem workItem, WorkItemManager manager) {

    // Do nothing, notifications cannot be aborted

  }
  
/*  public static void main (String args[]) {
	  WeatherReturn weatherReturn = getWeatherService ("75060");
	  System.out.println ("weatherReturn state: " + weatherReturn.getState());
	  System.out.println ("weatherReturn city: " + weatherReturn.getCity());
	  System.out.println ("weatherReturn temperature: " + weatherReturn.getTemperature());
  }*/

}
